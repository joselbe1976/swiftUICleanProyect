# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
#       Stop all: docker-compose down
#
version: '3.7'

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}

services:
  app:
    container_name: dragonball_api
    image: kc-api:latest
    build:
      context: .
    env_file: .env
    depends_on:
      - db
    environment:
      <<: *shared_environment
    ports:
      - '8080:8080'
    restart: always
    logging:
      options:
        max-size: 100m
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  migrate:
    container_name: dragonball_migrate
    image: kc-api:latest
    build:
      context: .
    env_file: .env
    environment:
      <<: *shared_environment
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    container_name: dragonball_revert
    image: kc-api:latest
    build:
      context: .
    env_file: .env
    environment:
      <<: *shared_environment
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
  db:
    container_name: dragonball_postgres
    image: postgres:14-alpine
    restart: always
    logging:
      options:
        max-size: 100m
    volumes:
      - ./db_data:/var/lib/postgresql/data/pgdata
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASS
      POSTGRES_DB: $DATABASE_NAME
    ports:
      - $DATABASE_PORT:5432
